-- 更新开始时间结束时间脚本：
UPDATE t_lucky_bag_themetype SET THEMETYPESTARTTIME = '2020-12-21 14:07:24' WHERE THEMETYPEID ='11'
UPDATE t_lucky_bag_themetype SET THEMETYPEENDTIME = '2020-12-21 14:07:24' WHERE THEMETYPEID ='11'


-- 根据手机号查询某个人的userid
SELECT userid FROM T_LUCKY_BAG_USER WHERE userphone = '15021597239'


-- 根据用户id查某个人福金流水
SELECT *  FROM T_LUCKY_BAG_RECORD WHERE USERID = '1023' ORDER BY RECORDCREATETIME DESC;


-- 根据用户手机号查某个人福金流水
SELECT * 
FROM T_LUCKY_BAG_RECORD 
WHERE USERID IN (SELECT userid FROM T_LUCKY_BAG_USER WHERE userphone = '15021597239') 
ORDER BY RECORDCREATETIME DESC;


-- 给指用户预置福金（不是系统充值）
INSERT  INTO t_lucky_bag_record (RECORDID,RECORDAMOUNT,RECORDTOTALAMOUNT,USERID,RESOURCETYPEID,RECORDDESC,RECORDCREATETIME)
VALUES (UUID(),'8888888','8888888','1455','1','游戏本金',NOW())


-- 最后导出每个人福金的sql：
SELECT U.USERNAME, U.USERID, U.USERPHONE, R.RECORDTOTALAMOUNT, RECORDCREATETIME
FROM T_LUCKY_BAG_RECORD AS R, T_LUCKY_BAG_USER AS U, (SELECT USERID, MAX( RECORDCREATETIME ) AS MAXTIME FROM T_LUCKY_BAG_RECORD GROUP BY USERID) AS MM
WHERE R.USERID = U.USERID AND MM.USERID = U.USERID AND MM.MAXTIME = R.RECORDCREATETIME 
ORDER BY USERID


-- 根据手机号查询当前用户未领的福袋
SELECT L.LUCKYBAGID,L.USERNAME,L.LUCKYBAGTOPIC 
FROM T_LUCKY_BAG_USER AS U,( SELECT USR.USERNAME ,LUCKY.LUCKYBAGID,LUCKYBAGISOVERTIME,LUCKYBAGREMAINNUMBER,LUCKYBAGRECEIVERS,LUCKYBAGTOPIC FROM T_LUCKY_BAG_LUCKYBAG AS LUCKY LEFT JOIN T_LUCKY_BAG_USER AS USR ON LUCKY.USERID = USR.USERID) AS L 
WHERE U.USERPHONE = ':PHONE' 
AND L.LUCKYBAGISOVERTIME IS NULL 
AND L.LUCKYBAGREMAINNUMBER > 0 
AND L.LUCKYBAGID NOT IN ( SELECT SNATCH.LUCKYBAGID FROM T_LUCKY_BAG_SNATCH AS SNATCH WHERE SNATCH.USERID = U.USERID ) 
AND (LUCKYBAG_USERINRECEIVERS(U.USERPHONE,U.DEPARTMENTID,L.LUCKYBAGRECEIVERS) > 0) 
ORDER BY  L.LUCKYBAGID




SHOW VARIABLES LIKE 'event_scheduler'


SET GLOBAL event_scheduler='on';




-- 查询一个人登录时，还没有被领的福袋详情 福袋不丢失
SELECT L.LUCKYBAGID,L.USERNAME,L.LUCKYBAGTOPIC,U.USERPHONE
FROM T_LUCKY_BAG_USER AS U, 
	( SELECT USR.USERNAME ,LUCKY.LUCKYBAGID,LUCKYBAGISOVERTIME,
			 LUCKYBAGREMAINNUMBER,LUCKYBAGRECEIVERS,LUCKYBAGTOPIC 
	  FROM T_LUCKY_BAG_LUCKYBAG AS LUCKY 
		   LEFT JOIN T_LUCKY_BAG_USER AS USR 
		   ON LUCKY.USERID = USR.USERID
	) AS L 
WHERE U.USERPHONE = '15021597239' 
AND L.LUCKYBAGISOVERTIME IS NULL 
AND L.LUCKYBAGREMAINNUMBER > 0 
AND L.LUCKYBAGID NOT IN ( SELECT SNATCH.LUCKYBAGID 
			  FROM T_LUCKY_BAG_SNATCH AS SNATCH 
			  WHERE SNATCH.USERID = U.USERID ) 
AND (LUCKYBAG_USERINRECEIVERS(U.USERPHONE,U.DEPARTMENTID,L.LUCKYBAGRECEIVERS) > 0)
ORDER BY L.LUCKYBAGID





-- 查询一个福袋的被抢信息
SELECT L.LUCKYBAGID,L.LUCKYBAGTOPIC ,USERNAME, USERPHONE
FROM T_LUCKY_BAG_USER U, T_LUCKY_BAG_SNATCH S, T_LUCKY_BAG_LUCKYBAG L
WHERE U.USERID = S.USERID
AND S.LUCKYBAGID = L.LUCKYBAGID
AND L.LUCKYBAGID = '003142DA-81B0-4031-87A9-2F0A3A2A114C'


-- 待退回总金额
SELECT SUM(LUCKYBAGREMAINAMOUNT)
FROM T_LUCKY_BAG_LUCKYBAG
WHERE LUCKYBAGREMAINAMOUNT > 0



-- 每个人拆了多少
SELECT U.USERID, IFNULL(TOTAL, 0) '拆得总额'
FROM t_lucky_bag_user U LEFT JOIN (SELECT USERID, SUM(RECORDAMOUNT) TOTAL
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '2'
GROUP BY userid) AS S ON U.USERID = S.USERID
ORDER BY U.USERID


SELECT SUM(total)
FROM (SELECT userid, SUM(RECORDAMOUNT) total
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '4'
GROUP BY userid) AS AA


-- 每个人发了多少
SELECT U.userid, SUM(RECORDAMOUNT) '发送总额'
FROM t_lucky_bag_user U LEFT JOIN t_lucky_bag_record R ON U.USERID = R.USERID
WHERE RESOURCETYPEID = '4'
GROUP BY U.userid

SELECT U.USERPHONE, S.TOTAL
FROM t_lucky_bag_user U LEFT JOIN (SELECT USERID, SUM(RECORDAMOUNT) TOTAL
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '4'
GROUP BY userid) AS S ON U.USERID = S.USERID
ORDER BY U.USERID


-- 每个人预置多少
SELECT U.USERID, IFNULL(TOTAL, 0) '预置'
FROM t_lucky_bag_user U LEFT JOIN (SELECT USERID, SUM(RECORDAMOUNT) TOTAL
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '1'
GROUP BY userid) AS S ON U.USERID = S.USERID
ORDER BY U.USERID



-- 查询每个人的收发详情
SELECT U.USERNAME,U.USERPHONE, AU 'USERID', ALLAMOUNT.RECORDTOTALAMOUNT '总额', IFNULL(AA, 0) '拆得总额',IFNULL(BB, 0) '发送总额'
FROM (SELECT U.USERNAME, U.USERID, U.USERPHONE, R.RECORDTOTALAMOUNT, RECORDCREATETIME
FROM T_LUCKY_BAG_RECORD AS R, T_LUCKY_BAG_USER AS U, (SELECT USERID, MAX( RECORDCREATETIME ) AS MAXTIME FROM T_LUCKY_BAG_RECORD GROUP BY USERID) AS MM
WHERE R.USERID = U.USERID AND MM.USERID = U.USERID AND MM.MAXTIME = R.RECORDCREATETIME 
ORDER BY USERID) ALLAMOUNT,(SELECT userid AU, SUM(RECORDAMOUNT) AA
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '2'
GROUP BY userid) AS A LEFT JOIN (SELECT userid BU, SUM(RECORDAMOUNT) BB
FROM `t_lucky_bag_record`
WHERE RESOURCETYPEID = '4'
GROUP BY userid) AS B ON A.AU = B.BU, T_LUCKY_BAG_USER AS U
WHERE U.USERID = A.AU AND ALLAMOUNT.USERID = U.USERID


-- 查询重复查的那些数据
SELECT USERNAME, USERPHONE, RECORDAMOUNT,  U.USERID, LASTRECORDID
FROM T_LUCKY_BAG_RECORD R, T_LUCKY_BAG_USER U
WHERE LASTRECORDID IN (SELECT LASTRECORDID
FROM T_LUCKY_BAG_RECORD
GROUP BY LASTRECORDID
HAVING COUNT(LASTRECORDID) > 1)
AND U.USERID = R.USERID
ORDER BY LASTRECORDID



-- 查询重复查的那些数据详细
SELECT DISTINCT LUCKYBAGID
FROM T_LUCKY_BAG_RECORD R, T_LUCKY_BAG_USER U, T_LUCKY_BAG_LUCKYBAG L
WHERE LASTRECORDID IN (SELECT LASTRECORDID
FROM T_LUCKY_BAG_RECORD
GROUP BY LASTRECORDID
HAVING COUNT(LASTRECORDID) > 1)
AND R.USERID = U.USERID
AND L.USERID = U.USERID
AND R.RESOURCETYPEID = '4'
AND L.LUCKYBAGCREATETIME = R.RECORDCREATETIME





























































-- 清库脚本 环境上线前执行的清库操作
DELETE FROM `T_LUCKY_BAG_SNATCH`;
DELETE FROM `T_LUCKY_BAG_MSG`;
DELETE FROM `T_LUCKY_BAG_LUCKYBAG`;
DELETE FROM `T_LUCKY_BAG_RECORD`;

DELETE FROM `T_LUCKY_BAG_USER`;
DELETE FROM `T_LUCKY_BAG_DEPARTMENT`;






